/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface SmoreAsyncContent {

    }
  }

  interface HTMLSmoreAsyncContentElement extends StencilComponents.SmoreAsyncContent, HTMLStencilElement {}

  var HTMLSmoreAsyncContentElement: {
    prototype: HTMLSmoreAsyncContentElement;
    new (): HTMLSmoreAsyncContentElement;
  };
  interface HTMLElementTagNameMap {
    'smore-async-content': HTMLSmoreAsyncContentElement;
  }
  interface ElementTagNameMap {
    'smore-async-content': HTMLSmoreAsyncContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'smore-async-content': JSXElements.SmoreAsyncContentAttributes;
    }
  }
  namespace JSXElements {
    export interface SmoreAsyncContentAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface SmoreCounter {
      'from': string;
      'pad': string;
    }
  }

  interface HTMLSmoreCounterElement extends StencilComponents.SmoreCounter, HTMLStencilElement {}

  var HTMLSmoreCounterElement: {
    prototype: HTMLSmoreCounterElement;
    new (): HTMLSmoreCounterElement;
  };
  interface HTMLElementTagNameMap {
    'smore-counter': HTMLSmoreCounterElement;
  }
  interface ElementTagNameMap {
    'smore-counter': HTMLSmoreCounterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'smore-counter': JSXElements.SmoreCounterAttributes;
    }
  }
  namespace JSXElements {
    export interface SmoreCounterAttributes extends HTMLAttributes {
      'from'?: string;
      'onSmoreAnimationEnd'?: (event: CustomEvent<void>) => void;
      'onSmoreAnimationStart'?: (event: CustomEvent<void>) => void;
      'pad'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SmoreMotionPath {

    }
  }

  interface HTMLSmoreMotionPathElement extends StencilComponents.SmoreMotionPath, HTMLStencilElement {}

  var HTMLSmoreMotionPathElement: {
    prototype: HTMLSmoreMotionPathElement;
    new (): HTMLSmoreMotionPathElement;
  };
  interface HTMLElementTagNameMap {
    'smore-motion-path': HTMLSmoreMotionPathElement;
  }
  interface ElementTagNameMap {
    'smore-motion-path': HTMLSmoreMotionPathElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'smore-motion-path': JSXElements.SmoreMotionPathAttributes;
    }
  }
  namespace JSXElements {
    export interface SmoreMotionPathAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface SmoreTypewriter {

    }
  }

  interface HTMLSmoreTypewriterElement extends StencilComponents.SmoreTypewriter, HTMLStencilElement {}

  var HTMLSmoreTypewriterElement: {
    prototype: HTMLSmoreTypewriterElement;
    new (): HTMLSmoreTypewriterElement;
  };
  interface HTMLElementTagNameMap {
    'smore-typewriter': HTMLSmoreTypewriterElement;
  }
  interface ElementTagNameMap {
    'smore-typewriter': HTMLSmoreTypewriterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'smore-typewriter': JSXElements.SmoreTypewriterAttributes;
    }
  }
  namespace JSXElements {
    export interface SmoreTypewriterAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface SmoreWindow {

    }
  }

  interface HTMLSmoreWindowElement extends StencilComponents.SmoreWindow, HTMLStencilElement {}

  var HTMLSmoreWindowElement: {
    prototype: HTMLSmoreWindowElement;
    new (): HTMLSmoreWindowElement;
  };
  interface HTMLElementTagNameMap {
    'smore-window': HTMLSmoreWindowElement;
  }
  interface ElementTagNameMap {
    'smore-window': HTMLSmoreWindowElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'smore-window': JSXElements.SmoreWindowAttributes;
    }
  }
  namespace JSXElements {
    export interface SmoreWindowAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;