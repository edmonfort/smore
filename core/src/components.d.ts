/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import {
  BooleanAttr,
} from './utils';

declare global {

  namespace StencilComponents {
    interface SmoreAsyncContent {

    }
  }

  interface HTMLSmoreAsyncContentElement extends StencilComponents.SmoreAsyncContent, HTMLStencilElement {}

  var HTMLSmoreAsyncContentElement: {
    prototype: HTMLSmoreAsyncContentElement;
    new (): HTMLSmoreAsyncContentElement;
  };
  interface HTMLElementTagNameMap {
    'smore-async-content': HTMLSmoreAsyncContentElement;
  }
  interface ElementTagNameMap {
    'smore-async-content': HTMLSmoreAsyncContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'smore-async-content': JSXElements.SmoreAsyncContentAttributes;
    }
  }
  namespace JSXElements {
    export interface SmoreAsyncContentAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface SmoreCountdown {
      'datetime': string;
      'pad': string;
    }
  }

  interface HTMLSmoreCountdownElement extends StencilComponents.SmoreCountdown, HTMLStencilElement {}

  var HTMLSmoreCountdownElement: {
    prototype: HTMLSmoreCountdownElement;
    new (): HTMLSmoreCountdownElement;
  };
  interface HTMLElementTagNameMap {
    'smore-countdown': HTMLSmoreCountdownElement;
  }
  interface ElementTagNameMap {
    'smore-countdown': HTMLSmoreCountdownElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'smore-countdown': JSXElements.SmoreCountdownAttributes;
    }
  }
  namespace JSXElements {
    export interface SmoreCountdownAttributes extends HTMLAttributes {
      'datetime'?: string;
      'pad'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SmoreCounter {
      'from': string;
      'pad': string;
    }
  }

  interface HTMLSmoreCounterElement extends StencilComponents.SmoreCounter, HTMLStencilElement {}

  var HTMLSmoreCounterElement: {
    prototype: HTMLSmoreCounterElement;
    new (): HTMLSmoreCounterElement;
  };
  interface HTMLElementTagNameMap {
    'smore-counter': HTMLSmoreCounterElement;
  }
  interface ElementTagNameMap {
    'smore-counter': HTMLSmoreCounterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'smore-counter': JSXElements.SmoreCounterAttributes;
    }
  }
  namespace JSXElements {
    export interface SmoreCounterAttributes extends HTMLAttributes {
      'from'?: string;
      'onSmoreAnimationEnd'?: (event: CustomEvent<void>) => void;
      'onSmoreAnimationStart'?: (event: CustomEvent<void>) => void;
      'pad'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SmoreGlitchImg {

    }
  }

  interface HTMLSmoreGlitchImgElement extends StencilComponents.SmoreGlitchImg, HTMLStencilElement {}

  var HTMLSmoreGlitchImgElement: {
    prototype: HTMLSmoreGlitchImgElement;
    new (): HTMLSmoreGlitchImgElement;
  };
  interface HTMLElementTagNameMap {
    'smore-glitch-img': HTMLSmoreGlitchImgElement;
  }
  interface ElementTagNameMap {
    'smore-glitch-img': HTMLSmoreGlitchImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'smore-glitch-img': JSXElements.SmoreGlitchImgAttributes;
    }
  }
  namespace JSXElements {
    export interface SmoreGlitchImgAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface SmoreGlitchText {
      'theme': 'default'|'rgb'|'cmyk';
    }
  }

  interface HTMLSmoreGlitchTextElement extends StencilComponents.SmoreGlitchText, HTMLStencilElement {}

  var HTMLSmoreGlitchTextElement: {
    prototype: HTMLSmoreGlitchTextElement;
    new (): HTMLSmoreGlitchTextElement;
  };
  interface HTMLElementTagNameMap {
    'smore-glitch-text': HTMLSmoreGlitchTextElement;
  }
  interface ElementTagNameMap {
    'smore-glitch-text': HTMLSmoreGlitchTextElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'smore-glitch-text': JSXElements.SmoreGlitchTextAttributes;
    }
  }
  namespace JSXElements {
    export interface SmoreGlitchTextAttributes extends HTMLAttributes {
      'theme'?: 'default'|'rgb'|'cmyk';
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SmoreObserver {
      'disconnect': BooleanAttr<'disconnect'>;
      'progress': BooleanAttr<'progress'>;
    }
  }

  interface HTMLSmoreObserverElement extends StencilComponents.SmoreObserver, HTMLStencilElement {}

  var HTMLSmoreObserverElement: {
    prototype: HTMLSmoreObserverElement;
    new (): HTMLSmoreObserverElement;
  };
  interface HTMLElementTagNameMap {
    'smore-observer': HTMLSmoreObserverElement;
  }
  interface ElementTagNameMap {
    'smore-observer': HTMLSmoreObserverElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'smore-observer': JSXElements.SmoreObserverAttributes;
    }
  }
  namespace JSXElements {
    export interface SmoreObserverAttributes extends HTMLAttributes {
      'disconnect'?: BooleanAttr<'disconnect'>;
      'progress'?: BooleanAttr<'progress'>;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SmoreTypewriter {

    }
  }

  interface HTMLSmoreTypewriterElement extends StencilComponents.SmoreTypewriter, HTMLStencilElement {}

  var HTMLSmoreTypewriterElement: {
    prototype: HTMLSmoreTypewriterElement;
    new (): HTMLSmoreTypewriterElement;
  };
  interface HTMLElementTagNameMap {
    'smore-typewriter': HTMLSmoreTypewriterElement;
  }
  interface ElementTagNameMap {
    'smore-typewriter': HTMLSmoreTypewriterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'smore-typewriter': JSXElements.SmoreTypewriterAttributes;
    }
  }
  namespace JSXElements {
    export interface SmoreTypewriterAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface SmoreWindow {

    }
  }

  interface HTMLSmoreWindowElement extends StencilComponents.SmoreWindow, HTMLStencilElement {}

  var HTMLSmoreWindowElement: {
    prototype: HTMLSmoreWindowElement;
    new (): HTMLSmoreWindowElement;
  };
  interface HTMLElementTagNameMap {
    'smore-window': HTMLSmoreWindowElement;
  }
  interface ElementTagNameMap {
    'smore-window': HTMLSmoreWindowElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'smore-window': JSXElements.SmoreWindowAttributes;
    }
  }
  namespace JSXElements {
    export interface SmoreWindowAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;